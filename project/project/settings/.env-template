
###################################################
#               Template for .env file            #
#                                                 #
# Create .env file and                            #
# put into ./project/project/settings/.env        #
#                                                 #
# Put the values without quotes like              #
# the comments above each variable                #
#                                                 #
# Usage in settings.py                            #
# env(variable_value, default=default_value)      #
# Example: env("DB_PORT", default="5432")         #
#                                                 #
###################################################

##################
# DJANGO SESSION #
##################
# A boolean that turns on/off debug mode. Never deploy a site into production with DEBUG turned on.
# Dev example: DEBUG=1
DEBUG=True

#################################
# SERVER NAMES TO ALLOWED HOSTS #
#################################
# A list of strings representing the host/domain names that this Django site can serve separated by commas
SERVERNAMES="localhost,127.0.0.1"

# A secret key for a particular Django installation.
# Dev example: SECRET_KEY=foo
SECRET_KEY='some_secret_key'

####################
# DATABASE SESSION #
####################
# A engine to connect the app to database
# Dev example: DB_ENGINE=django.db.backends.postgresql
DB_ENGINE=django.db.backends.sqlite3

# The name of the database
# Dev example: POSTGRES_DB=scaffold_dev
POSTGRES_DB=db.sqlite3

# The user with permission to use the database
# Dev example: POSTGRES_USER=postgres
POSTGRES_USER=postgres

# The user password with permission to use the database
# Dev example: POSTGRES_PASSWORD=postgres
POSTGRES_PASSWORD=changethispassword

# The host address where is the database, if you using containers you can use the name
#of the db container in the same docker network
# Dev example:
# With container: DB_HOST=scaffold_db
# Without container: DB_HOST=localhost or container IPAddress
DB_HOST=localhost

# The port used to connect the database to the application
# Dev example: DB_PORT=5432
DB_PORT=5432

##################
# E-MAIL SESSION #
##################
# To manage email by console in dev mode use django.core.mail.backends.console.EmailBackend
# as EMAIL_BACKEND, you don' need fill the others variables.
# To manage email by smtp in dev mode use django.core.mail.backends.smtp.EmailBackend
# as backend and fill the others variables.
# Dev example:
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
# EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
EMAIL_HOST="usm114.siteground.biz"
EMAIL_HOST_USER="noreply@ideamaker.agency"
DEFAULT_FROM_EMAIL="noreply@ideamaker.agency"
EMAIL_PORT=587
EMAIL_USE_TLS=True
SERVER_EMAIL="noreply@ideamaker.agency"
EMAIL_HOST_PASSWORD="XXXXXXXXXXXXXXX"
CUSTOMER_SERVICE="info@ideamaker.agency"

#######################
#     AWS SESSION     #
#######################
AWS_ACCESS_KEY=
AWS_SECRET_KEY=
AWS_REGION_NAME=

# Use this var to identify commit info at the top of the app - Don't use this in Production Environment
# The path points to where is the .git info
REPO_DIR=./

# Django LOGGING
LOG_FILEPATH=
LOG_LEVEL=


#######################
#      OPENAI         #
#######################

# Set to true if you want to use Openai Azure
OPENAI_USE_AZURE=False

# Azure related
OPENAI_AZURE_ENDPOINT=""
OPENAI_AZURE_API_KEY=""
OPENAI_AZURE_DEPLOYMENT_NAME=""
OPENAI_AZURE_MODEL=""
OPENAI_AZURE_API_VERSION="2023-09-01-preview"
OPENAI_AZURE_WHISPER_DEPLOYMENT_NAME=""

# Standard OpenAI
OPENAI_LIVE_MODE=False
OPENAI_API_KEY_LIVE=
OPENAI_API_KEY_TEST=
OPENAI_DEFAULT_MODEL="gpt-3.5-turbo"
OPENAI_WHISPER_MODEL="whisper-1"

# Change according to choosen model; lowering that value decreases usage of previous prompts = less context is provided to gpt
GPT_MODEL_MAX_TOKENS=4096
GPT_MAX_TOKENS_PER_RESPONSE=800
GPT_TEMPERATURE=0.2



## CORS & CSRF SETTINGS
CORS_ORIGIN_WHITELIST="http://localhost:8000,http://localhost:8080,http://localhost:3000"
CORS_ALLOW_CREDENTIALS=True
CSRF_TRUSTED_ORIGINS="http://localhost:8080,http://localhost:3000"
CORS_ALLOWED_ORIGINS="http://localhost:8000,http://localhost:80,http://127.0.0.1:80,http://localhost:5173,http://127.0.0.1:5173,http://localhost:3000"
CORS_ALLOW_HEADERS="accept,authorization,content-type,user-agent,x-csrftoken,x-requested-with,session-user-id"